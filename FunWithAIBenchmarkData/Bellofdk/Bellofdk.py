# File Name : {Bellofdk.py}
# Student Name: {Derick Bellofatto}
# email:  {Bellofdk@mail.uc.edu}
# Assignment Number: Assignment 08
# Due Date:   {03/26/2025}
# Course #/Section:   {IS4010 / 001}
# Semester/Year:   {Spring 2025}
# Brief Description of the assignment:  {Assignment demonstrates the ability to work as a team as well as upload group projects via GitHub}

# Brief Description of what this module does. {This module creates a function which uses the user's own prefered viewing method for .png filetypes in order to display a team logo
# as well as creates a simple bar chart for answer occurence rates in the file medical_genetics_test.csv Constraints kept in mind included the use of native python packages like CSV and OS
# rather than non-native packages such as pandas, or pyplot.}
# Citations: {All code was generated by ChatGPT - chatgpt.com }

# Anything else that's relevant:


import csv
import os
import platform
from collections import Counter

def Bellofdk():
    """
    Displays team logo image and a visualized distribution of answer options from a CSV file.
    Works with standard Python only (no external libraries required).
    """
    
    # --- Internal: Open PNG Image ---
    def display_team_image():
        image_path = os.path.join('bellofdk', 'team_logo.png')
        print("\nOpening Helpful Hawk team logo image...\n")
        try:
            if platform.system() == "Darwin":  # macOS
                os.system(f"open {image_path}")
            elif platform.system() == "Windows":  # Windows
                os.startfile(image_path)
            else:  # Linux and others
                os.system(f"xdg-open {image_path}")
        except Exception as e:
            print(f"Could not open image: {e}")

    # --- Internal: Visualize Answer Distribution ---
    def visualize_answer_distribution(data):
        answers = [row['B'] for row in data if 'B' in row]
        counter = Counter(answers)

        print("Answer Distribution for medical_genetics_test.csv:\n")
        for answer in sorted(counter.keys()):
            bar = '#' * counter[answer]
            print(f"{answer}: {bar} ({counter[answer]})")
        print()

    # --- Internal: Load CSV File ---
    def load_data(filepath):
        with open(filepath, newline='', encoding='utf-8') as csvfile:
            reader = csv.DictReader(csvfile)
            return list(reader)

    # --- Main logic inside function ---
    csv_path = os.path.join("dataPackage", "MMLU", "data", "medical_genetics_test.csv")
    image_path = os.path.join("bellofdk", "team_logo.png")

    if not os.path.exists(csv_path):
        print(f"Error: CSV file '{csv_path}' not found.")
        return
    if not os.path.exists(image_path):
        print(f"Error: Image file '{image_path}' not found.")
        return

    data = load_data(csv_path)
    display_team_image()
    visualize_answer_distribution(data)
